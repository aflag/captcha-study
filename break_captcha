#!/usr/bin/python
# Copyright (C) 2012 Rafael Cunha de Almeida <rafael@kontesti.me>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

import sys
import Image
from sklearn.externals import joblib
from image_processing import DigitSeparator
import urllib2
import StringIO

def detect_number(model, image):
    digit_separator = DigitSeparator(image)
    digits = digit_separator.get_digits()
    labels = model.predict(digits)
    print ''.join(map(lambda x: str(int(x)), labels))

def main():
    model = joblib.load(sys.argv[1])
    if len(sys.argv) > 2:
        print_number(model, sys.argv[2])
    else:
        try:
            while 1:
                img_path = raw_input()
                if img_path.startswith('http'):
                    tmp = StringIO.StringIO(urllib2.urlopen(img_path).read())
                    image = Image.open(tmp).convert('L')
                else:
                    with open(img_path) as f_image:
                        image = Image.open(f_image).convert('L')
                detect_number(model, image)
        except EOFError:
            pass


if __name__ == '__main__':
    main()
